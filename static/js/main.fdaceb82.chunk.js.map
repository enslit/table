{"version":3,"sources":["components/MaterialButton/MaterialButton.js","components/ColorPicker/ColorPicker.js","components/Form/Form.js","components/Search/Search.js","components/Table/TableHead/TableHead.js","components/Table/Row/Row.js","components/Table/TableBody/TableBody.js","components/Table/Table.js","hooks/useLocalStorage.js","components/App.js","index.js"],"names":["MaterialButton","handleClick","type","className","onClick","ColorPicker","color","onChangeColor","useState","showColorPicker","setShowColorPicker","style","backgroundColor","aria-label","onChangeComplete","Form","onSubmit","onClose","initialData","name","setName","setType","setColor","noValidate","evt","preventDefault","htmlFor","id","value","onChange","target","required","minLength","hex","Search","onSearch","showSearch","setShowSearch","placeholder","TableHead","handleAddNewRow","handleSearchInput","searchValue","addNewMode","setAddNewMode","colSpan","formData","Row","row","onDeleteRow","onEditRow","index","editMode","setEditMode","handleEditClick","handleDeleteClick","data","draggableId","String","provided","ref","innerRef","dragHandleProps","draggableProps","TableBody","rows","handleEdit","handleDelete","onDragEnd","List","React","memo","map","length","droppableId","droppableProps","Table","handleAddRow","handleEditRow","handleDeleteRow","setSearchValue","filteredRows","setFilteredRows","useEffect","filter","r","toLowerCase","regExp","RegExp","match","useLocalStorage","key","initialValue","prefixedKey","jsonValue","localStorage","getItem","JSON","parse","setValue","setItem","stringify","App","setRows","result","destination","source","reorderedRows","list","startIndex","endIndex","Array","from","splice","removed","reorder","rowData","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fdaceb82.chunk.js","sourcesContent":["import React from 'react';\nimport './material-button.scss';\n\nfunction MaterialButton({handleClick, type}) {\n  return (\n    <button type=\"button\" className={`button button_type_${type}`} onClick={handleClick}>\n      <span className=\"material-icons\">{type}</span>\n    </button>\n  );\n}\n\nexport default MaterialButton;","import React, {useState} from 'react';\nimport {SketchPicker} from 'react-color';\nimport './color-picker.scss';\n\nfunction ColorPicker({color, onChangeColor}) {\n  const [showColorPicker, setShowColorPicker] = useState(false);\n\n  const handleChangeColorClick = () => {\n    setShowColorPicker(!showColorPicker);\n  }\n\n  const handleChangeColorClose = () => {\n    setShowColorPicker(false);\n  }\n\n  return (\n    <>\n      <div className=\"color-picker\">\n        <button\n          className=\"color-picker__button\"\n          style={{backgroundColor: color}}\n          aria-label=\"Выбрать цвет\"\n          type=\"button\"\n          onClick={handleChangeColorClick}\n        >\n          {color}\n        </button>\n      </div>\n      {\n        showColorPicker &&\n        <div className=\"color-picker__popover\">\n          <div className=\"color-picker__cover\" onClick={handleChangeColorClose} />\n          <SketchPicker\n            color={color}\n            onChangeComplete={onChangeColor}\n          />\n        </div>\n      }\n    </>\n  );\n}\n\nexport default ColorPicker;","import React, {useState} from 'react';\nimport ColorPicker from '../ColorPicker/ColorPicker'\nimport './form.scss';\n\nfunction Form({onSubmit, onClose, initialData}) {\n  const defaultColor = '#ffffff';\n  const defaultType = 'main';\n  const [name, setName] = useState(initialData?.name || '');\n  const [type, setType] = useState(initialData?.type || defaultType);\n  const [color, setColor] = useState(initialData?.color || defaultColor);\n\n  const handleChangeName = (evt) => {\n    setName(evt.target.value);\n  }\n\n  const handleChangeType = (evt) => {\n    setType(evt.target.value);\n  }\n\n  const handleChangeColor = (value) => {\n    setColor(value.hex);\n  }\n\n  const handleSubmit = (evt) => {\n    // TODO Баг при сабмите формы по нажатию на enter когда открыто окно выбора цвета\n    evt.preventDefault();\n    onSubmit({name, type, color});\n  }\n\n  return (\n    <form noValidate className=\"form\" onSubmit={handleSubmit}>\n      <div className=\"form__fields\">\n        <div className=\"form__field\">\n          <label htmlFor=\"name\" className=\"form__label\">Name</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            className=\"form__input\"\n            value={name}\n            onChange={handleChangeName}\n            name=\"name\"\n            required\n            minLength={2}\n          />\n        </div>\n        <div className=\"form__field\">\n          <label htmlFor=\"type\" className=\"form__label\">Type</label>\n          <select name=\"type\" id=\"type\" className=\"form__input\" value={type} onChange={handleChangeType}>\n            <option value=\"main\">Main</option>\n            <option value=\"side\">Side</option>\n            <option value=\"content\">Content</option>\n          </select>\n        </div>\n        <div className=\"form__field\">\n          <span className=\"form__label\">Color</span>\n          <ColorPicker color={color} onChangeColor={handleChangeColor} />\n        </div>\n      </div>\n      <div className=\"form__buttons\">\n        <button type=\"submit\" className=\"form__button form__button_type_submit\">\n          <span className=\"material-icons\">done</span>\n        </button>\n        <button type=\"button\" className=\"form__button form__button_type_reset\" onClick={onClose}>\n          <span className=\"material-icons\">clear</span>\n        </button>\n      </div>\n    </form>\n  );\n}\n\nexport default Form;","import React, {useState} from 'react';\r\nimport MaterialButton from '../MaterialButton/MaterialButton'\r\nimport './search.scss';\r\n\r\nfunction Search({value, onSearch}) {\r\n  const [showSearch, setShowSearch] = useState(false);\r\n\r\n  const handleSearchClick = () => {\r\n    if (showSearch) {\r\n      onSearch('');\r\n    }\r\n    setShowSearch(!showSearch);\r\n  }\r\n\r\n  const handleSearchInput = (evt) => {\r\n    onSearch(evt.target.value)\r\n  }\r\n\r\n  return (\r\n    <div className=\"search\">\r\n      <input\r\n        type=\"text\"\r\n        name=\"search\"\r\n        className={`search__input ${showSearch && 'search__input_active'}`}\r\n        value={value}\r\n        onChange={handleSearchInput}\r\n        placeholder=\"Search By Name...\"\r\n      />\r\n      <MaterialButton type=\"search\" handleClick={handleSearchClick} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Search;","import React, {useState} from 'react';\r\nimport MaterialButton from '../../MaterialButton/MaterialButton'\r\nimport Form from '../../Form/Form'\r\nimport Search from '../../Search/Search'\r\n\r\nfunction TableHead({handleAddNewRow, handleSearchInput, searchValue}) {\r\n  const [addNewMode, setAddNewMode] = useState(false);\r\n\r\n  const handleSubmitAddNewRow = (formData) => {\r\n    handleAddNewRow(formData, setAddNewMode)\r\n  }\r\n\r\n  return (\r\n    <thead>\r\n      <tr className=\"table__row\">\r\n        <td className=\"table__cell\" colSpan={2}>\r\n          {\r\n            addNewMode\r\n              ? 'Добавить строку'\r\n              : <MaterialButton type=\"add\" handleClick={() => setAddNewMode(true)} />\r\n          }\r\n        </td>\r\n        <td className=\"table__cell table__cell_type_search\" colSpan={2}>\r\n          <Search value={searchValue} onSearch={handleSearchInput} />\r\n        </td>\r\n      </tr>\r\n      {\r\n        addNewMode &&\r\n        <tr className=\"table__row\">\r\n          <td className=\"table__cell\" colSpan={4}>\r\n            <Form onClose={() => setAddNewMode(false)} onSubmit={handleSubmitAddNewRow} />\r\n          </td>\r\n        </tr>\r\n      }\r\n      <tr className=\"table__row\">\r\n        <th className=\"table__cell\">Name</th>\r\n        <th className=\"table__cell\">Type</th>\r\n        <th className=\"table__cell\">Color</th>\r\n        <th className=\"table__cell\">Actions</th>\r\n      </tr>\r\n    </thead>\r\n  );\r\n}\r\n\r\nexport default TableHead;","import React, {useState} from 'react'\nimport Form from '../../Form/Form'\nimport {Draggable} from 'react-beautiful-dnd'\n\nfunction Row({row, onDeleteRow, onEditRow, index}) {\n  const [editMode, setEditMode] = useState(false);\n  const {id, name, type, color} = row;\n\n  const handleEditClick = () => {\n    setEditMode(true);\n  }\n\n  const handleCloseForm = () => {\n    setEditMode(false);\n  }\n\n  const handleSubmit = (data) => {\n    onEditRow({...data, id}, setEditMode);\n  }\n\n  const handleDeleteClick = () => {\n    onDeleteRow(id);\n  }\n\n  if (editMode) {\n    return (\n      <tr className=\"table__row\">\n        <td colSpan={4}>\n          <Form\n            onSubmit={handleSubmit}\n            onClose={handleCloseForm}\n            initialData={{name, type, color}}\n          />\n        </td>\n      </tr>\n    )\n  }\n\n  return (\n    <Draggable draggableId={String(row.id)} index={index}>\n      {provided => (\n        <tr\n          className=\"table__row\"\n          ref={provided.innerRef}\n          {...provided.dragHandleProps}\n          {...provided.draggableProps}\n        >\n          <td className=\"table__cell\">{name}</td>\n          <td className=\"table__cell\">{type}</td>\n          <td className=\"table__cell\" style={{backgroundColor: color}}>{color}</td>\n          <td className=\"table__cell table__cell_type_actions\">\n            <button type=\"button\" className=\"button button_type_edit\" onClick={handleEditClick}>\n              <span className=\"material-icons\">edit</span>\n            </button>\n            <button type=\"button\" className=\"button button_type_delete\" onClick={handleDeleteClick}>\n              <span className=\"material-icons\">delete</span>\n            </button>\n          </td>\n        </tr>\n      )}\n    </Draggable>\n  )\n}\n\nexport default Row;","import React from 'react';\r\nimport {DragDropContext, Droppable} from 'react-beautiful-dnd'\r\nimport Row from '../Row/Row'\r\n\r\nfunction TableBody({rows, handleEdit, handleDelete, onDragEnd}) {\r\n  const List = React.memo(({rows}) => {\r\n    return rows.map((row, index) => (\r\n      <Row\r\n        key={row.id}\r\n        index={index}\r\n        row={row}\r\n        onEditRow={handleEdit}\r\n        onDeleteRow={handleDelete}\r\n      />\r\n    ));\r\n  });\r\n\r\n  if (rows.length === 0) {\r\n    return (\r\n      <tbody>\r\n        <tr className=\"table__row\">\r\n          <td className=\"table__cell\" colSpan={4}>\r\n            Список пока пуст...\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <DragDropContext onDragEnd={onDragEnd}>\r\n      <Droppable droppableId=\"list\">\r\n        {provided => (\r\n          <tbody ref={provided.innerRef} {...provided.droppableProps}>\r\n            <List rows={rows} />\r\n            {provided.placeholder}\r\n          </tbody>\r\n        )}\r\n      </Droppable>\r\n    </DragDropContext>\r\n  );\r\n}\r\n\r\nexport default TableBody;","import React, {useEffect, useState} from 'react';\r\nimport TableHead from './TableHead/TableHead'\r\nimport './table.scss';\r\nimport TableBody from './TableBody/TableBody'\r\n\r\nfunction Table({rows, handleAddRow, handleEditRow, handleDeleteRow, onDragEnd}) {\r\n  const [searchValue, setSearchValue] = useState('');\r\n  const [filteredRows, setFilteredRows] = useState(rows);\r\n\r\n  useEffect(() => {\r\n    if (searchValue) {\r\n      setFilteredRows([\r\n        ...rows.filter(r => {\r\n          const name = r.name.toLowerCase();\r\n          const regExp = new RegExp(searchValue.toLowerCase(), 'g');\r\n          return name.match(regExp);\r\n        })\r\n      ]);\r\n    } else {\r\n      setFilteredRows([...rows]);\r\n    }\r\n  }, [searchValue, rows]);\r\n\r\n\r\n  return (\r\n    <table className=\"table\">\r\n      <TableHead\r\n        searchValue={searchValue}\r\n        handleAddNewRow={handleAddRow}\r\n        handleSearchInput={setSearchValue}\r\n      />\r\n      <TableBody\r\n        rows={filteredRows}\r\n        handleEdit={handleEditRow}\r\n        handleDelete={handleDeleteRow}\r\n        onDragEnd={onDragEnd}\r\n      />\r\n    </table>\r\n  );\r\n}\r\n\r\nexport default Table;","import { useEffect, useState } from 'react';\r\n\r\nconst PREFIX = \"react-dnd-table-\"\r\n\r\nfunction useLocalStorage(key, initialValue) {\r\n\tconst prefixedKey = PREFIX + key\r\n\tconst [value, setValue] = useState(() => {\r\n\t\tconst jsonValue = localStorage.getItem(prefixedKey)\r\n\t\tif (jsonValue != null) return JSON.parse(jsonValue)\r\n\t\tif (typeof initialValue === 'function') {\r\n\t\t\treturn initialValue()\r\n\t\t} else {\r\n\t\t\treturn initialValue\r\n\t\t}\r\n\t})\r\n\r\n\tuseEffect(() => {\r\n\t\tlocalStorage.setItem(prefixedKey, JSON.stringify(value))\r\n\t}, [prefixedKey, value])\r\n\r\n\treturn [value, setValue]\r\n}\r\n\r\nexport default useLocalStorage;","import React from 'react';\nimport Table from './Table/Table'\nimport useLocalStorage from '../hooks/useLocalStorage'\n\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n\n  return result;\n};\n\nfunction App() {\n  const [rows, setRows] = useLocalStorage('rows', []);\n\n  const onDragEnd = (result) => {\n    if (!result.destination) {\n      return;\n    }\n\n    if (result.destination.index === result.source.index) {\n      return;\n    }\n\n    const reorderedRows = reorder(\n      rows,\n      result.source.index,\n      result.destination.index\n    );\n\n    setRows(reorderedRows);\n  }\n\n  const handleAddRow = (rowData, setAddNewMode) => {\n    setRows([\n      ...rows,\n      {\n        id: rows.length + 1,\n        ...rowData\n      }\n    ])\n    setAddNewMode(false);\n  }\n\n  const handleEditRow = (rowData, setEditMode) => {\n    setRows(rows.map(row => row.id !== rowData.id ? row : rowData))\n    setEditMode(false);\n  }\n\n  const handleDeleteRow = (id) => {\n    setRows(rows.filter(r => r.id !== id));\n  }\n\n  return (\n    <div className=\"container\">\n      <Table\n        rows={rows}\n        onDragEnd={onDragEnd}\n        handleAddRow={handleAddRow}\n        handleEditRow={handleEditRow}\n        handleDeleteRow={handleDeleteRow}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport {render} from 'react-dom';\nimport App from './components/App';\nimport './index.scss';\n\nrender(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}